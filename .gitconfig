[user]
	name = sharray2918
	email = 156676782+sharray2918@users.noreply.github.com.
[diff]
	compactionHeuristic = true
[core]
	autocrlf = input
[alias]
	ch = "!f() { args=$@; if [ -z \"$args\" ]; then branch=$(git branch --all | grep -v HEAD | fzf --preview 'echo {} | cut -c 3- | xargs git log --color=always' | cut -c 3-); git checkout $(echo $branch | sed 's#remotes/[^/]*/##'); else git checkout $args; fi }; f"
	br-d = "!f() { args=$@; if [ -z \"$args\" ]; then branch=$(git branch | grep -v HEAD | fzf --preview 'echo {} | cut -c 3- | xargs git log --color=always' | cut -c 3-); git branch -D $(echo $branch | sed 's#remotes/[^/]*/##'); else git branch -D $args; fi }; f"
	co-amend = commit --amend
	dif = "!f() { args=$@; [ -z \"$args\" ] && args=HEAD; ([ \"$args\" = \"HEAD\" ] && git status --short || git diff --name-status $args | sed 's/\t/  /') | fzf --preview \"echo {} | cut -c 4- | xargs git diff --color=always $args --\" --multi --height 90% | cut -c 4-; }; f"
	ad = !git dif | xargs git add --
	rst = !git dif | xargs git reset --
	pus = "!f() { args=$@; [ -z \"$args\" ] && git push origin HEAD || git push $args; }; f"
	pul = "!f() { args=$@; [ -z \"$args\" ] && git pull origin $(git symbolic-ref --short HEAD) || git pull $args; }; f"
	stl = !git stash list | fzf --preview 'echo {} | grep -o stash@{.*} | xargs git stash show -p --color=always' --height 90% | grep -o stash@{.*}
	sta = !git stl | xargs git stash apply
	std = !git stl | xargs git stash drop
[push]
    default = current
[merge "ours"]
	driver = true
[url "https://"]
	insteadOf = git://
